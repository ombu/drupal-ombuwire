<?php
/**
 * @file ombuwire.module
 */

/**
 * STATE Definitions
 */
define('OMBUWIRE_NOT_STARTED', 0);
define('OMBUWIRE_IN_PROGRESS', 1);
define('OMBUWIRE_FINISHED', 2);

/**
 * Implements hook_theme().
 */
function ombuwire_theme($existing, $type, $theme, $path) {
  return array(
    'ombuwire_page_wireframe' => array(
      'variables' => array('url' => NULL),
      'file' => 'ombuwire.theme.inc',
    ),
    'ombuwire_page_design' => array(
      'variables' => array('url' => NULL),
      'file' => 'ombuwire.theme.inc',
    ),
    'ombuwire_page_image' => array(
      'variables' => array('url' => NULL),
      'file' => 'ombuwire.theme.inc',
    ),
    'ombuwire_page_static' => array(
      'variables' => array('url' => NULL),
      'file' => 'ombuwire.theme.inc',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function ombuwire_block_info() {
  foreach(_ombuwire_blocks_needed() as $size) {
    $delta = sprintf('fpo_%d_%d', $size[0], $size[1]);
    $info = sprintf('FPO %dx%s', $size[0], $size[1]);
    $blocks[$delta]['info'] = $info;
    $blocks[$delta]['cache'] = DRUPAL_NO_CACHE;
    return $blocks;
  }
}

/**
 * Implements hook_block_view().
 */
function ombuwire_block_view($delta = '') {
  if(preg_match('/^fpo_(\d+)_(\d+)$/', $delta, $matches)) {
    $block['subject'] = t('FPO');
    $block['content'] = _ombuwire_get_fpo_block($matches[1], $matches[2]);
    return $block;
  }
}

/**
 * Implements hook_preprocess_block().
 */
function ombuwire_preprocess_block(&$variables) {
  if($variables['block']->module == 'ombuwire' && strpos($variables['block']->delta,'fpo_') === 0) {
    $variables['classes_array'][] = 'block-ombuwire-fpo';
  }
}

/**
 * Implements hook_page_delivery_callback_alter()
 */
function ombuwire_page_delivery_callback_alter(&$delivery_callback) {
  $delivery_callback = 'ombuwire_delivery_callback';
}

/**
 *  Module functions
 */

function _ombuwire_get_fpo_block($width = 100, $height = 100)  {
  return sprintf("<div class='fpo' style='width: %dpx; height: %dpx'></div>",
    $width, $height);
}

/**
 * @todo Should be a site variable or hook
 */
function _ombuwire_blocks_needed() {
  return array(
    array(250,250),
    array(500,500),
  );
}

/**
 * Return the sitemap array
 */
function ombuwire_get_sitemap() {
  $profile = variable_get('install_profile', 'ombuprofile');
  if (!module_load_include('inc', $profile, 'sitemap.ombuwire')) {
    $message = "No 'sitemap.ombuwire.inc' file found in the the '$profile' install profile. ";
    $message .= "An example file can be found at '". drupal_get_path('module', 'ombuwire');
    $message .= "/sitemap.ombuwire.sample.inc'.";
    drupal_set_message($message, 'warning');
    return array();
  }
  $sitemap = _ombuwire_sitemap();
  return $sitemap;
}

/**
 * Returns the flat sitemap, keyed by path.  Function used recursively.
 */
function ombuwire_get_sitemap_flat($map = NULL) {
  $map = ($map === NULL) ? ombuwire_get_sitemap() : $map;
  $paths = array();
  foreach ($map as $path => $array) {
    $children = array();
    if (!empty($array['#children'])) {
      $children = ombuwire_get_sitemap_flat($array['#children']);
      unset($array['#children']);
    }
    $paths[$path] = $array;
    $paths = array_merge($paths, $children);
  }
  return $paths;
}

/**
 * ombuwire implementation of the delivery_callback
 */
function ombuwire_delivery_callback($page_callback_result) {

  // get the original $delivery_callback
  $router_item = menu_get_item();
  $delivery_callback = !empty($router_item['delivery_callback']) ? $router_item['delivery_callback'] : 'drupal_deliver_html_page';
  $requested_path = drupal_get_path_alias(current_path());
  $sitemap_flat = ombuwire_get_sitemap_flat();

  if ($page_callback_result === MENU_NOT_FOUND || array_key_exists($requested_path, $sitemap_flat)) {

    $sitemap_item = FALSE;
    $which_display = FALSE;

    if ($page_callback_result === MENU_NOT_FOUND) {
      $root_path = implode('/', array_slice(explode('/', $requested_path), 0, -1));
      $which_display = end(explode('/', $requested_path));
      $sitemap_item = $sitemap_flat[$root_path];
    }
    else {
      $which_display = 'root';
      $sitemap_item = $sitemap_flat[$requested_path];
    }

    if ($sitemap_item) {
      if (in_array($which_display, array_keys($sitemap_item))) {
        // The display version has a key in the array. Ex: 'wireframe', 'design', etc.
        $page_callback_result = array(
          'title' => $sitemap_item['#title'] .' | '. ucwords($which_display),
          'content' => theme("ombuwire_page_{$which_display}", array('url' => $sitemap_item[$which_display])),
        );
        $delivery_callback = 'ombuwire_deliver_page';
      }
      else {
        // it's the root item
      }
    }
  }

  $delivery_callback($page_callback_result);
}

function ombuwire_deliver_page($vars) {
  $title = $vars['title'];
  $content = $vars['content'];
  $css = base_path() . drupal_get_path('module', 'ombuwire') .'/css/ombuwire.css';

  $page = <<<HEREDOC
<!DOCTYPE html>
<html>
  <head>
    <title>$title</title>
    <style media="all" type="text/css">
      @import url("$css");
    </style>
  </head>
  <body>
    $content
  </body>
</html>
HEREDOC;

  print $page;

  drupal_page_footer();
}
